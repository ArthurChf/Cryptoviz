version: '3.8'
services:
  mongo:
    image: mongo
    restart: always
    networks:
      - broker_network
    volumes:
      - mongo:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      
    
  clickhouse:
    container_name: clickhouse
    image: yandex/clickhouse-server
    ports:
     - "8123:8123"
     - "9000:9000"
     - "9009:9009"
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse:/var/lib/clickhouse
    networks:
      - broker_network

  broker-1:
    container_name: broker-1
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.2
    networks:
      - broker_network
    restart: unless-stopped
    command:
      - redpanda start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker-1:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker-1:8082,external://localhost:18082
      - --rpc-addr broker-1:33145
      - --advertise-rpc-addr broker-1:33145
      - --smp 1
      - --memory 2G
      - --mode dev-container
      - --default-log-level=debug
    volumes:
      - broker-1:/var/lib/redpanda/data
    ports:
      - 18082:18082
      - 19092:19092
      - 19644:9644

  broker-2:
    container_name: broker-2
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.2
    networks:
      - broker_network
    restart: unless-stopped
    command:
      - redpanda start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:29092
      - --advertise-kafka-addr internal://broker-2:9092,external://localhost:29092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:28082
      - --advertise-pandaproxy-addr internal://broker-2:8082,external://localhost:28082
      - --rpc-addr broker-2:33145
      - --advertise-rpc-addr broker-2:33145
      - --smp 1
      - --memory 2G
      - --mode dev-container
      - --default-log-level=debug
      - --seeds broker-1:33145
    volumes:
      - broker-2:/var/lib/redpanda/data
    ports:
      - 28082:28082
      - 29092:29092
      - 29644:9644
    depends_on:
      - broker-1
  
  broker-3:
    container_name: broker-3
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.2
    networks:
      - broker_network
    restart: unless-stopped
    command:
      - redpanda start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:29092
      - --advertise-kafka-addr internal://broker-3:9092,external://localhost:29092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:28082
      - --advertise-pandaproxy-addr internal://broker-3:8082,external://localhost:28082
      - --rpc-addr broker-3:33145
      - --advertise-rpc-addr broker-3:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=debug
      - --seeds broker-1:33145
    volumes:
      - broker-3:/var/lib/redpanda/data
    ports:
      - 38082:38082
      - 39092:39092
      - 39644:9644
    depends_on:
      - broker-1

  broker-ui:
    container_name: broker-ui
    image: docker.redpanda.com/redpandadata/console:v2.3.9
    networks:
      - broker_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["broker-1:9092"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://broker-1:9644"]
    ports:
      - 8080:8080
    depends_on:
      - broker-1
      - broker-2
      - broker-3

  scrapper:
    networks:
      - broker_network
    restart: unless-stopped
    build:
      context: ./api
      dockerfile: ./dockerfiles/Dockerfile.Scrapper
    ports:
      - '3001:3001'
    depends_on:
      - broker-ui

  data:
    networks:
      - broker_network
    restart: unless-stopped
    build:
      context: ./api
      dockerfile: ./dockerfiles/Dockerfile.Data
    ports:
      - '3000:3000'
    depends_on:
      - broker-ui

  python-scripts:
    networks:
      - broker_network
    build:
      context: ./python-scripts
      dockerfile: Dockerfile.Scripts
    volumes:
      - .env:/app/.env
    depends_on:
      - broker-ui
      - clickhouse
      - mongo
    
networks:
  broker_network:
    driver: bridge

volumes:
  broker-1:
  broker-2:
  broker-3:
  mongo:
  clickhouse:
  python-scripts:
