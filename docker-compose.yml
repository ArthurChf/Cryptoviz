version: '3.8'
services:
  broker:
    container_name: broker
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.21
    networks:
      - broker_network
    restart: unless-stopped
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr broker:33145
      - --advertise-rpc-addr broker:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=debug
    volumes:
      - broker:/var/lib/redpanda/data
    ports:
    - '18081:18081'
    - '18082:18082'
    - '19092:19092'
    - '19644:9644'

  broker-ui:
    container_name: broker-ui
    image: docker.redpanda.com/redpandadata/console:v2.3.8
    networks:
      - broker_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["broker:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://broker:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://broker:9644"]
    ports:
      - 8080:8080
    depends_on:
      - broker

  scrapper:
    networks:
      - broker_network
    restart: unless-stopped
    build:
      context: ./api
      dockerfile: ./dockerfiles/Dockerfile.Scrapper
    ports:
      - '3001:3001'
    depends_on:
      - broker

  data:
    networks:
      - broker_network
    restart: unless-stopped
    build:
      context: ./api
      dockerfile: ./dockerfiles/Dockerfile.Data
    ports:
      - '3000:3000'
    depends_on:
      - broker

  python-scripts:
    networks:
      - broker_network
    restart: unless-stopped
    build:
      context: ./python-scripts
      dockerfile: Dockerfile.Scripts
    depends_on:
      - broker

networks:
  broker_network:
    driver: bridge

volumes:
  broker: null